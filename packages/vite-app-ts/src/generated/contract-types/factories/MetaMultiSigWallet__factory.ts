/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaMultiSigWallet,
  MetaMultiSigWalletInterface,
} from "../MetaMultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_signaturesRequired",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "CloseStream",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashString",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "frequency",
        type: "uint256",
      },
    ],
    name: "OpenStream",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "added",
        type: "bool",
      },
    ],
    name: "Owner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newSignatureRequired",
        type: "uint256",
      },
    ],
    name: "addSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "closeStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "executeTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frequency",
        type: "uint256",
      },
    ],
    name: "openStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldSigner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newSignatursRequired",
        type: "uint256",
      },
    ],
    name: "removeSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signaturesRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "streamBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "streamWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "streams",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frequency",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "last",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
    ],
    name: "transferFund",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newSignatursRequired",
        type: "uint256",
      },
    ],
    name: "updateSignaturesRequired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e8038038062001e8083398101604081905262000034916200024e565b600081116200009e5760405162461bcd60e51b815260206004820152602b60248201527f636f6e7374727563746f723a206d757374206265206e6f6e2d7a65726f20736960448201526a19dcc81c995c5d5a5c995960aa1b60648201526084015b60405180910390fd5b600181905560005b82518110156200020f576000838281518110620000c757620000c762000337565b6020026020010151905060006001600160a01b0316816001600160a01b03161415620001365760405162461bcd60e51b815260206004820152601960248201527f636f6e7374727563746f723a207a65726f206164647265737300000000000000604482015260640162000095565b6001600160a01b03811660009081526020819052604090205460ff1615620001a15760405162461bcd60e51b815260206004820152601d60248201527f636f6e7374727563746f723a206f776e6572206e6f7420756e69717565000000604482015260640162000095565b6001600160a01b03811660008181526020818152604091829020805460ff1916600190811790915591519182527ffe545f48304051c4029eb2da9927daa59da0414b4b084fdceaf2955b609b899e910160405180910390a2508062000206816200034d565b915050620000a6565b50505060035562000377565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200024957600080fd5b919050565b6000806000606084860312156200026457600080fd5b8351602080860151919450906001600160401b03808211156200028657600080fd5b818701915087601f8301126200029b57600080fd5b815181811115620002b057620002b06200021b565b8060051b604051601f19603f83011681018181108582111715620002d857620002d86200021b565b60405291825284820192508381018501918a831115620002f757600080fd5b938501935b828510156200032057620003108562000231565b84529385019392850192620002fc565b809750505050505050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200037057634e487b7160e01b600052601160045260246000fd5b5060010190565b611af980620003876000396000f3fe6080604052600436106100f75760003560e01c80639a8a05921161008a578063ce757d2911610059578063ce757d2914610320578063d1fbffa014610336578063de4b9e9314610363578063e0a2ff541461038357600080fd5b80639a8a0592146102c1578063a8397ddc146102d7578063affed0e0146102f7578063cd4558fd1461030d57600080fd5b80633bad5426116100c65780633bad5426146101fc578063545a4a3c1461021c57806365af1bed1461024a578063836992751461026a57600080fd5b806319045a251461013d5780632a387d5d1461017a5780632f54bf6e1461019c5780633034a742146101dc57600080fd5b36610138576040805134815247602082015233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a2005b600080fd5b34801561014957600080fd5b5061015d6101583660046115ad565b6103a3565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018657600080fd5b5061019a610195366004611609565b61040d565b005b3480156101a857600080fd5b506101cc6101b736600461163e565b60006020819052908152604090205460ff1681565b6040519015158152602001610171565b3480156101e857600080fd5b5061019a6101f736600461165b565b61059b565b34801561020857600080fd5b5061019a610217366004611674565b610635565b34801561022857600080fd5b5061023c6102373660046116a0565b610784565b604051908152602001610171565b34801561025657600080fd5b5061019a610265366004611674565b6107c3565b34801561027657600080fd5b506102a661028536600461163e565b60046020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610171565b3480156102cd57600080fd5b5061023c60035481565b3480156102e357600080fd5b5061019a6102f2366004611703565b610961565b34801561030357600080fd5b5061023c60025481565b6101cc61031b36600461163e565b6109cc565b34801561032c57600080fd5b5061023c60015481565b34801561034257600080fd5b50610356610351366004611754565b610ae7565b60405161017191906118b4565b34801561036f57600080fd5b5061019a61037e36600461163e565b610e29565b34801561038f57600080fd5b5061023c61039e36600461163e565b610f61565b600061040682610400856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90610fc1565b9392505050565b3330146104355760405162461bcd60e51b815260040161042c906118c7565b60405180910390fd5b6001600160a01b0383166000908152600460205260409020541561049b5760405162461bcd60e51b815260206004820152601f60248201527f6f70656e53747265616d3a2073747265616d20616c7265616479206f70656e00604482015260640161042c565b600082116104e35760405162461bcd60e51b81526020600482015260156024820152741bdc195b94dd1c99585b4e881b9bc8185b5bdd5b9d605a1b604482015260640161042c565b600081116105335760405162461bcd60e51b815260206004820152601860248201527f6f70656e53747265616d3a206e6f206672657175656e63790000000000000000604482015260640161042c565b6001600160a01b038316600081815260046020908152604091829020858155600181018590554260029091015581518581529081018490527f81236f9eb471668cf00861415085dace409d719678881c59b03e49683bbef716910160405180910390a2505050565b3330146105ba5760405162461bcd60e51b815260040161042c906118c7565b600081116106305760405162461bcd60e51b815260206004820152603860248201527f7570646174655369676e61747572657352657175697265643a206d757374206260448201527f65206e6f6e2d7a65726f20736967732072657175697265640000000000000000606482015260840161042c565b600155565b3330146106545760405162461bcd60e51b815260040161042c906118c7565b6001600160a01b03821660009081526020819052604090205460ff166106bc5760405162461bcd60e51b815260206004820152601660248201527f656d6f76655369676e65723a206e6f74206f776e657200000000000000000000604482015260640161042c565b600081116107215760405162461bcd60e51b815260206004820152602c60248201527f72656d6f76655369676e65723a206d757374206265206e6f6e2d7a65726f207360448201526b1a59dcc81c995c5d5a5c995960a21b606482015260840161042c565b6001600160a01b03821660008181526020818152604091829020805460ff19168155600185905554915160ff909216151582527ffe545f48304051c4029eb2da9927daa59da0414b4b084fdceaf2955b609b899e91015b60405180910390a25050565b600030600354868686866040516020016107a3969594939291906118e9565b604051602081830303815290604052805190602001209050949350505050565b3330146107e25760405162461bcd60e51b815260040161042c906118c7565b6001600160a01b0382166108385760405162461bcd60e51b815260206004820152601660248201527f6164645369676e65723a207a65726f2061646472657300000000000000000000604482015260640161042c565b6001600160a01b03821660009081526020819052604090205460ff16156108a15760405162461bcd60e51b815260206004820152601b60248201527f6164645369676e65723a206f776e6572206e6f7420756e697175650000000000604482015260640161042c565b600081116109035760405162461bcd60e51b815260206004820152602960248201527f6164645369676e65723a206d757374206265206e6f6e2d7a65726f2073696773604482015268081c995c5d5a5c995960ba1b606482015260840161042c565b6001600160a01b03821660008181526020818152604091829020805460ff19166001908117825585905554915160ff909216151582527ffe545f48304051c4029eb2da9927daa59da0414b4b084fdceaf2955b609b899e9101610778565b336000908152600460205260409020546109bd5760405162461bcd60e51b815260206004820152601860248201527f77697468647261773a206e6f206f70656e2073747265616d0000000000000000604482015260640161042c565b6109c8338383610fe5565b5050565b60003330146109ed5760405162461bcd60e51b815260040161042c906118c7565b6001600160a01b038216610a435760405162461bcd60e51b815260206004820181905260248201527f7472616e7366657246756e643a20746f2069732061646472657373207a65726f604482015260640161042c565b6000826001600160a01b03163460405160006040518083038185875af1925050503d8060008114610a90576040519150601f19603f3d011682016040523d82523d6000602084013e610a95565b606091505b5050905080610ade5760405162461bcd60e51b81526020600482015260156024820152741d1c985b9cd9995c919d5b990e881d1e0819985a5b605a1b604482015260640161042c565b50600192915050565b3360009081526020819052604090205460609060ff16610b5d5760405162461bcd60e51b815260206004820152602b60248201527f657865637574655472616e73616374696f6e3a206f6e6c79206f776e6572732060448201526a63616e206578656375746560a81b606482015260840161042c565b6000610b6d600254878787610784565b600280549192506000610b7f8361195a565b919050555060008060005b8551811015610c80576000610bb885888481518110610bab57610bab611975565b60200260200101516103a3565b9050826001600160a01b0316816001600160a01b031611610c395760405162461bcd60e51b815260206004820152603560248201527f657865637574655472616e73616374696f6e3a206475706c6963617465206f7260448201527420756e6f726465726564207369676e61747572657360581b606482015260840161042c565b6001600160a01b038116600090815260208190526040902054909250829060ff1615610c6d5783610c698161195a565b9450505b5080610c788161195a565b915050610b8a565b50600154821015610ceb5760405162461bcd60e51b815260206004820152602f60248201527f657865637574655472616e73616374696f6e3a206e6f7420656e6f756768207660448201526e616c6964207369676e61747572657360881b606482015260840161042c565b610d136040518060400160405280600681526020016503b30b63ab2960d51b81525088611134565b600080896001600160a01b03168989604051610d2f919061198b565b60006040518083038185875af1925050503d8060008114610d6c576040519150601f19603f3d011682016040523d82523d6000602084013e610d71565b606091505b509150915081610dc35760405162461bcd60e51b815260206004820152601d60248201527f657865637574655472616e73616374696f6e3a207478206661696c6564000000604482015260640161042c565b336001600160a01b03167f9053e9ec105157fac8c9308d63e6b22be5f50fe915a3e567419b624311a02d748b8b8b6001600254610e0091906119a7565b8a87604051610e14969594939291906119be565b60405180910390a29998505050505050505050565b333014610e485760405162461bcd60e51b815260040161042c906118c7565b6001600160a01b038116600090815260046020526040902054610eb85760405162461bcd60e51b815260206004820152602260248201527f636c6f736553747265616d3a2073747265616d20616c726561647920636c6f73604482015261195960f21b606482015260840161042c565b610f108160046000846001600160a01b03166001600160a01b03168152602001908152602001600020600001546040518060400160405280600d81526020016c1cdd1c99585b4818db1bdcd959609a1b815250610fe5565b6001600160a01b03811660008181526004602052604080822082815560018101839055600201829055517fcc362a45d32c94d02a329570bd5935709d77f6dc79ac6afa5107b513642461c29190a250565b6001600160a01b03811660009081526004602052604081206001810154600290910154610f8e90426119a7565b6001600160a01b038416600090815260046020526040902054610fb19190611a11565b610fbb9190611a30565b92915050565b6000806000610fd08585611179565b91509150610fdd816111e9565b509392505050565b6000610ff084610f61565b9050828110156110395760405162461bcd60e51b81526020600482015260146024820152730eed2e8d0c8e4c2ee7440dcdee840cadcdeeaced60631b604482015260640161042c565b6001600160a01b0384166000908152600460205260409020600201548190849061106390426119a7565b61106d9190611a11565b6110779190611a30565b6001600160a01b03851660009081526004602052604090206002015461109d9190611a52565b6001600160a01b038516600081815260046020526040908190206002019290925590517f485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751906110ef9086908690611a6a565b60405180910390a26040516001600160a01b0385169084156108fc029085906000818181858888f1935050505015801561112d573d6000803e3d6000fd5b5050505050565b6109c8828260405160240161114a929190611a8b565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526113a7565b6000808251604114156111b05760208301516040840151606085015160001a6111a4878285856113c8565b945094505050506111e2565b8251604014156111da57602083015160408401516111cf8683836114b5565b9350935050506111e2565b506000905060025b9250929050565b60008160048111156111fd576111fd611aad565b14156112065750565b600181600481111561121a5761121a611aad565b14156112685760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161042c565b600281600481111561127c5761127c611aad565b14156112ca5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161042c565b60038160048111156112de576112de611aad565b14156113375760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161042c565b600481600481111561134b5761134b611aad565b14156113a45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161042c565b50565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156113ff57506000905060036114ac565b8460ff16601b1415801561141757508460ff16601c14155b1561142857506000905060046114ac565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561147c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114a5576000600192509250506114ac565b9150600090505b94509492505050565b6000806001600160ff1b038316816114d260ff86901c601b611a52565b90506114e0878288856113c8565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561152d5761152d6114ee565b604052919050565b600067ffffffffffffffff83111561154f5761154f6114ee565b611562601f8401601f1916602001611504565b905082815283838301111561157657600080fd5b828260208301376000602084830101529392505050565b600082601f83011261159e57600080fd5b61040683833560208501611535565b600080604083850312156115c057600080fd5b82359150602083013567ffffffffffffffff8111156115de57600080fd5b6115ea8582860161158d565b9150509250929050565b6001600160a01b03811681146113a457600080fd5b60008060006060848603121561161e57600080fd5b8335611629816115f4565b95602085013595506040909401359392505050565b60006020828403121561165057600080fd5b8135610406816115f4565b60006020828403121561166d57600080fd5b5035919050565b6000806040838503121561168757600080fd5b8235611692816115f4565b946020939093013593505050565b600080600080608085870312156116b657600080fd5b8435935060208501356116c8816115f4565b925060408501359150606085013567ffffffffffffffff8111156116eb57600080fd5b6116f78782880161158d565b91505092959194509250565b6000806040838503121561171657600080fd5b82359150602083013567ffffffffffffffff81111561173457600080fd5b8301601f8101851361174557600080fd5b6115ea85823560208401611535565b6000806000806080858703121561176a57600080fd5b8435611775816115f4565b93506020858101359350604086013567ffffffffffffffff8082111561179a57600080fd5b6117a689838a0161158d565b945060608801359150808211156117bc57600080fd5b818801915088601f8301126117d057600080fd5b8135818111156117e2576117e26114ee565b8060051b6117f1858201611504565b918252838101850191858101908c84111561180b57600080fd5b86860192505b83831015611847578235858111156118295760008081fd5b6118378e89838a010161158d565b8352509186019190860190611811565b999c989b5096995050505050505050565b60005b8381101561187357818101518382015260200161185b565b83811115611882576000848401525b50505050565b600081518084526118a0816020860160208601611858565b601f01601f19169290920160200192915050565b6020815260006104066020830184611888565b6020808252600890820152672737ba1029b2b63360c11b604082015260600190565b60006bffffffffffffffffffffffff19808960601b168352876014840152866034840152808660601b166054840152508360688301528251611932816088850160208701611858565b91909101608801979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561196e5761196e611944565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000825161199d818460208701611858565b9190910192915050565b6000828210156119b9576119b9611944565b500390565b6001600160a01b038716815285602082015260c0604082015260006119e660c0830187611888565b85606084015284608084015282810360a0840152611a048185611888565b9998505050505050505050565b6000816000190483118215151615611a2b57611a2b611944565b500290565b600082611a4d57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611a6557611a65611944565b500190565b828152604060208201526000611a836040830184611888565b949350505050565b604081526000611a9e6040830185611888565b90508260208301529392505050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122002833a22a504abdb10e0399df0346596877b8a33b0f461dabf47df213bd7fad064736f6c634300080a0033";

type MetaMultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaMultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaMultiSigWallet__factory extends ContractFactory {
  constructor(...args: MetaMultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MetaMultiSigWallet";
  }

  deploy(
    _chainId: BigNumberish,
    _owners: string[],
    _signaturesRequired: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaMultiSigWallet> {
    return super.deploy(
      _chainId,
      _owners,
      _signaturesRequired,
      overrides || {}
    ) as Promise<MetaMultiSigWallet>;
  }
  getDeployTransaction(
    _chainId: BigNumberish,
    _owners: string[],
    _signaturesRequired: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _chainId,
      _owners,
      _signaturesRequired,
      overrides || {}
    );
  }
  attach(address: string): MetaMultiSigWallet {
    return super.attach(address) as MetaMultiSigWallet;
  }
  connect(signer: Signer): MetaMultiSigWallet__factory {
    return super.connect(signer) as MetaMultiSigWallet__factory;
  }
  static readonly contractName: "MetaMultiSigWallet";
  public readonly contractName: "MetaMultiSigWallet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaMultiSigWalletInterface {
    return new utils.Interface(_abi) as MetaMultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaMultiSigWallet {
    return new Contract(address, _abi, signerOrProvider) as MetaMultiSigWallet;
  }
}
